/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_fr_canadian_french.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp FR_N2  &kp N3    &kp N4    &kp N5                                               &kp N6         &kp N7  &kp N8          &kp N9   &kp N0        &kp EQUAL
&kp TAB    &kp Q   &kp W      &kp E     &kp R     &kp T                                                &kp Y          &kp U   &kp I           &kp O    &kp P         &kp MINUS
&mo 3      &kp A   &kp S      &kp D     &kp F     &kp G                                                &kp H          &kp J   &kp K           &kp L    &kp SEMI      &kp SQT
&kp LCTRL  &kp Z   &kp X      &kp C     &kp V     &kp B   &kp FR_LEFT_BRACKET    &kp FR_RIGHT_BRACKET  &kp N          &kp M   &kp COMMA       &kp DOT  &kp FR_SLASH  &kp FR_GRAVE
                              &kp LGUI  &kp LALT  &mo 2   &kp SPACE              &kp RET               &kp BACKSPACE  &mo 1   &kp FR_E_ACUTE
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                                                       &trans     &trans     &trans           &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                                                             &kp F7     &kp F8     &kp F9           &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                                                          &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &kp FR_LEFT_PARENTHESIS    &kp FR_RIGHT_PARENTHESIS  &trans     &kp MINUS  &kp KP_PLUS      &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans        &trans        &kp FR_SLASH               &kp FR_BACKSLASH          &trans     &trans     &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                                                  &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                                                  &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                                                  &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                           &trans   &trans   &trans   &trans                  &trans                 &trans       &trans     &trans
            >;
        };

        Shift {
            bindings = <
&kp ESC  &kp FR_EXCL   &kp FR_AT_SIGN  &kp FR_POUND  &kp FR_DOLLAR  &kp FR_PERCENT                                           &kp LS(CARET)  &kp FR_AMPERSAND  &kp FR_ASTERISK     &kp FR_LEFT_PARENTHESIS  &kp FR_RIGHT_PARENTHESIS  &kp FR_PLUS
&trans   &kp LS(FR_Q)  &kp LS(FR_W)    &kp LS(FR_E)  &kp LS(FR_R)   &kp LS(FR_T)                                             &kp LS(FR_Y)   &kp LS(FR_U)      &kp LS(FR_I)        &kp LS(FR_O)             &kp LS(FR_P)              &kp FR_UNDERSCORE
&trans   &kp LS(FR_A)  &kp LS(FR_S)    &kp LS(FR_D)  &kp LS(FR_F)   &kp LS(FR_G)                                             &kp LS(FR_H)   &kp LS(FR_J)      &kp LS(FR_K)        &kp LS(FR_L)             &kp FR_COLON              &kp FR_DOUBLE_QUOTES
&trans   &kp LS(FR_Z)  &kp LS(FR_X)    &kp LS(FR_C)  &kp LS(FR_V)   &kp LS(FR_B)    &kp FR_LEFT_BRACE    &kp FR_RIGHT_BRACE  &kp LS(FR_N)   &kp LS(FR_M)      &kp FR_LESS_THAN    &kp FR_GREATER_THAN      &kp FR_QUESTION           &trans
                                       &trans        &trans         &trans          &trans               &trans              &trans         &trans            &kp LS(FR_E_ACUTE)
            >;
        };
    };
};
